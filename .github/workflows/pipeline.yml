# name: Medicine CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main # Chạy khi có push vào nhánh frontend

# jobs:
#   frontend-test:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: frontend

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18' # Hoặc phiên bản phù hợp với React

#       - name: Install dependencies
#         working-directory: frontend
#         run: npm install --legacy-peer-deps

#       - name: 🔍 Run tests
#         working-directory: frontend
#         run: npm run test --run

#   frontend-deploy:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: frontend
#     needs: frontend-test
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm install --legacy-peer-deps

#       - name: Build frontend
#         run: npm run build

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Deploy to S3
#         run: |
#           aws s3 sync ./build s3://${{ secrets.S3_BUCKET_NAME }} --delete

#       - name: Create CloudFront invalidation
#         run: |
#           aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

#   backend-deploy:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: backend
#     needs: frontend-deploy
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup SDK 21
#         uses: actions/setup-java@v3
#         with: 
#           distribution: "temurin"
#           java-version: 21

#       - name: Maven test & clean package
#         run: mvn clean package -DskipTests     

#       - name: Copy jar to EC2 via SCP
#         uses: appleboy/scp-action@v0.1.3
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_PEM_KEY_B64 }}
#           source: backend/target/medicine-tracker-0.0.1-SNAPSHOT.jar
#           target: /home/ubuntu/

#       - name: SSH to EC2 and deploy
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_PEM_KEY_B64 }}
#           script: |
#             sudo mv /home/ubuntu/backend/target/medicine-tracker-0.0.1-SNAPSHOT.jar /home/ubuntu/
#             # pkill -f 'java -jar' || true
#             # nohup java -jar /root/medicine-tracker-0.0.1-SNAPSHOT.jar > /root/log.txt 2>&1 &
